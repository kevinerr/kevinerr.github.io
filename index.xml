<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hkh&#39;s Blog</title>
    <link>https://kevinerr.github.io/</link>
    <description>Recent content on hkh&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 28 Jul 2022 10:59:34 +0800</lastBuildDate><atom:link href="https://kevinerr.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>20220728</title>
      <link>https://kevinerr.github.io/posts/life/20220728/</link>
      <pubDate>Thu, 28 Jul 2022 10:59:34 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/life/20220728/</guid>
      <description>机器人跳跃问题 机器人正在玩一个古老的基于 DOS 的游戏。 游戏中有 N+1 座建筑——从 0到 N 编号，从左到右排列。 编号为 0 的建筑高度为 0个单位，编号为 i的建</description>
    </item>
    
    <item>
      <title>字节大数据</title>
      <link>https://kevinerr.github.io/posts/tech/%E5%AD%97%E8%8A%82%E5%A4%A7%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sun, 24 Jul 2022 09:37:17 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E5%AD%97%E8%8A%82%E5%A4%A7%E6%95%B0%E6%8D%AE/</guid>
      <description>SQL Optimizer 解析 https://bytedance.feishu.cn/file/boxcn9uWBTLWg2a8GIUSRJ0Txqb https://live.juejin.cn/4354/yc_SQL hash join和sort merge join：https://blog.csdn.net/lp284558195/article/detail</description>
    </item>
    
    <item>
      <title>TCP</title>
      <link>https://kevinerr.github.io/posts/tech/tcp/</link>
      <pubDate>Mon, 18 Jul 2022 10:10:23 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/tcp/</guid>
      <description>2、TCP/IP 历史与分层模型 目前 TCP/IP 协议可以说是名气最大、使用最广泛的计算机网络，从这篇文章来会讲解 TCP 协议的历史和分层模型。将分以下两个部分</description>
    </item>
    
    <item>
      <title>Mempool</title>
      <link>https://kevinerr.github.io/posts/tech/mempool/</link>
      <pubDate>Sat, 09 Jul 2022 11:43:05 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/mempool/</guid>
      <description>DPDK Mempool 库 内存池是一个具有固定大小的对象分配器。 在DPDK中，它由名称唯一标识，并且使用mempool handler来存储空闲对象。 默认的mem</description>
    </item>
    
    <item>
      <title>Mbuf</title>
      <link>https://kevinerr.github.io/posts/tech/mbuf/</link>
      <pubDate>Sat, 09 Jul 2022 11:42:35 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/mbuf/</guid>
      <description>Mbuf Library mbuf 库提供分配和释放缓冲区 (mbuf) 的能力，DPDK 应用程序可以使用这些缓冲区来存储消息缓冲区。消息缓冲区使用内存池库存储在内存池中。 rte_mbuf 结构通常承</description>
    </item>
    
    <item>
      <title>DSMM</title>
      <link>https://kevinerr.github.io/posts/tech/dsmm/</link>
      <pubDate>Sun, 03 Jul 2022 11:01:22 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/dsmm/</guid>
      <description>DSMM:数据安全能力成熟度模型(Data Security Capability Maturity Model) 规定了数据采集安全、数据传输安全、数据存 储安全、数据处理安全、数据交换安全、数据销毁安全、</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://kevinerr.github.io/posts/tech/kvm/</link>
      <pubDate>Fri, 01 Jul 2022 14:52:10 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/kvm/</guid>
      <description>kvm内核虚拟机 简介 虚拟机网络 （1）桥接模式的虚拟机，就像一个在路由器&amp;quot;民政局&amp;quot;那里&amp;quot;上过户口&amp;quot;的成</description>
    </item>
    
    <item>
      <title>Gopacket</title>
      <link>https://kevinerr.github.io/posts/tech/gopacket/</link>
      <pubDate>Mon, 30 May 2022 16:05:21 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/gopacket/</guid>
      <description>1</description>
    </item>
    
    <item>
      <title>WireShark</title>
      <link>https://kevinerr.github.io/posts/tech/wireshark/</link>
      <pubDate>Tue, 24 May 2022 16:01:15 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/wireshark/</guid>
      <description>ARP arp报文段格式 广播 响应 IP ip报文段格式 UDP udp报文段格式 DNS dns报文段格式 ICMP icmp报文段格式 请求 响应 TCP curl -I baidu.com tcp报文段格式 3次握手 HTTP</description>
    </item>
    
    <item>
      <title>云设计模式</title>
      <link>https://kevinerr.github.io/posts/read/%E4%BA%91%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 20 May 2022 09:47:39 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/read/%E4%BA%91%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>d断路器模式（接受失败是为了更好的成功） 问题与背景 处理连接到远程服务或资源时可能需要不同时间才能纠正的故障。存在故障是由于不易预料的意外事件</description>
    </item>
    
    <item>
      <title>博客阅读</title>
      <link>https://kevinerr.github.io/posts/read/%E5%8D%9A%E5%AE%A2%E9%98%85%E8%AF%BB/</link>
      <pubDate>Wed, 11 May 2022 10:16:17 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/read/%E5%8D%9A%E5%AE%A2%E9%98%85%E8%AF%BB/</guid>
      <description>理想的亲密关系 第一个永远是真诚，我不希望我完全看不透这个人，或者她做了很多事我无法理解，就缺少沟通这种事我觉得是不ok的。 我希望2个人是在做</description>
    </item>
    
    <item>
      <title>字节青训营</title>
      <link>https://kevinerr.github.io/posts/tech/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/</link>
      <pubDate>Fri, 06 May 2022 10:00:50 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5/</guid>
      <description>day1 go语言上手-基础语言 https://bytedance.feishu.cn/file/boxcnQnHXuDOdzd8CqVid7nQLmg 随机数 rand.Intn () 函数是个伪随机函数，不管运行多少次都只会返回同样的随机数，因为它默认的资源就是单一值，所以必须调用 rand.Seed (), 并</description>
    </item>
    
    <item>
      <title>幼麟实验室</title>
      <link>https://kevinerr.github.io/posts/tech/%E5%B9%BC%E9%BA%9F%E5%AE%9E%E9%AA%8C%E5%AE%A4/</link>
      <pubDate>Tue, 03 May 2022 15:52:43 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E5%B9%BC%E9%BA%9F%E5%AE%9E%E9%AA%8C%E5%AE%A4/</guid>
      <description>https://www.bilibili.com/video/BV1hv411x7we string unicode字符集，每个字符对应01串 定长编码&amp;ndash;浪费内存 UTF-8：变长编码，有类似于IP地址分类的前缀 c存储字符串：\0</description>
    </item>
    
    <item>
      <title>编译原理</title>
      <link>https://kevinerr.github.io/posts/read/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 28 Apr 2022 13:04:47 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/read/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</guid>
      <description>此项目为GXU编译原理课设，适合低要求，混及格同学，内涵完整代码(1k行+)、文件和论文(1w字+) 运行环境:eclipse 词法模块内容 （1</description>
    </item>
    
    <item>
      <title>深入浅出dpdk</title>
      <link>https://kevinerr.github.io/posts/tech/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAdpdk/</link>
      <pubDate>Tue, 26 Apr 2022 16:04:48 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAdpdk/</guid>
      <description>第2章 Cache和内存 2.1 存储系统简介 本章会讨论Cache和内存 2.21 系统架构的演进 北桥也称为主桥（Host Bridge），主要用来处理高速信号，</description>
    </item>
    
    <item>
      <title>计算机组成原理</title>
      <link>https://kevinerr.github.io/posts/tech/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 25 Apr 2022 19:58:39 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</guid>
      <description>https://blog.csdn.net/weixin_43914604/article/details/104096298</description>
    </item>
    
    <item>
      <title>计算机网络</title>
      <link>https://kevinerr.github.io/posts/tech/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Mon, 25 Apr 2022 19:46:10 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid>
      <description>https://blog.csdn.net/weixin_43914604/article/details/104722679 第1 章 计算机网络体系结构 1.1 计算机网络概述 1.1.1 计算机网络的概念、组成、功能和分类 1.1.2 计算机网络的性能指标（速率、带宽、吞吐量、时延、往返时延、时</description>
    </item>
    
    <item>
      <title>信息安全</title>
      <link>https://kevinerr.github.io/posts/tech/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/</link>
      <pubDate>Mon, 25 Apr 2022 14:49:30 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/</guid>
      <description>DDos https://www.zhihu.com/question/22259175 概念 Distributed Denial of Service，翻译成中文就是分布式拒绝服务 一般来说是指攻击者利用“肉鸡”对目标网站在较短的时间内发起大量请求，大规模消耗目标</description>
    </item>
    
    <item>
      <title>搜素</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E6%90%9C%E7%B4%A0/</link>
      <pubDate>Mon, 25 Apr 2022 09:36:37 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E6%90%9C%E7%B4%A0/</guid>
      <description>顺序搜索 顺序查找又称为线性查找，是一种最简单的查找方法。适用于线性表的顺序存储结构和链式存储结构。该算法的时间复杂度为O(n)。 从第一个元素</description>
    </item>
    
    <item>
      <title>Django</title>
      <link>https://kevinerr.github.io/posts/tech/django/</link>
      <pubDate>Sat, 23 Apr 2022 10:22:07 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/django/</guid>
      <description>什么是wsgi？ WSGI是Python在处理HTTP请求时，规定的一种处理方式。如一个HTTP Request过来了，那么就有一个相应的处理函</description>
    </item>
    
    <item>
      <title>Dpdk</title>
      <link>https://kevinerr.github.io/posts/tech/dpdk/</link>
      <pubDate>Fri, 22 Apr 2022 13:38:30 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/dpdk/</guid>
      <description>前置知识 网卡(Network Interface Card，简称NIC) https://blog.csdn.net/hellozhxy/article/details/120711251 UIO （Linux Userspace I/O） 作用 作为高并发大流量网络开发框架的DPDK，能够避免内核中断爆</description>
    </item>
    
    <item>
      <title>Context</title>
      <link>https://kevinerr.github.io/posts/tech/context/</link>
      <pubDate>Wed, 20 Apr 2022 15:08:32 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/context/</guid>
      <description>context 一个接口、四种具体实现、六个函数 1 2 3 4 5 6 7 8 9 10 type Context interface { Deadline() (deadline time.Time, ok bool) Done() &amp;lt;-chan struct{} Err() error Value(key interface{}) interface{} } Deadline返回绑定当前context的任务被</description>
    </item>
    
    <item>
      <title>Io复用</title>
      <link>https://kevinerr.github.io/posts/tech/io%E5%A4%8D%E7%94%A8/</link>
      <pubDate>Wed, 20 Apr 2022 10:19:21 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/io%E5%A4%8D%E7%94%A8/</guid>
      <description>从 Go 源码目录结构和对应代码文件了解到 Go 在不同平台下的网络 I/O 模式的有不同实现。比如，在 Linux 系统下基于 epoll，freeBSD 系统下基于 kque</description>
    </item>
    
    <item>
      <title>约瑟夫环</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF/</link>
      <pubDate>Tue, 19 Apr 2022 21:58:18 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF/</guid>
      <description>玩游戏 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include&amp;lt;bits/stdc++.h&amp;gt;using namespace std; int n,k; int main() { cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;k; queue&amp;lt;int&amp;gt; q; for(int i =1;i&amp;lt;=n;i++) q.push(i); while(k--){ int a; cin&amp;gt;&amp;gt;a; a%=q.size(); for(int i =1;i&amp;lt;=a;i++){ q.push(q.front()); q.pop(); } cout&amp;lt;&amp;lt;q.front()&amp;lt;&amp;lt;&amp;#34; &amp;#34;; q.pop(); } return 0; } 招聘 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    
    <item>
      <title>高性能mysql笔记</title>
      <link>https://kevinerr.github.io/posts/tech/%E9%AB%98%E6%80%A7%E8%83%BDmysql%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 14 Apr 2022 12:55:16 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E9%AB%98%E6%80%A7%E8%83%BDmysql%E7%AC%94%E8%AE%B0/</guid>
      <description>第四章 Schema与数据类型优化 4.1 选择优化的数据类型 几个简单的原则 更小的通常更好 eg：能用varchar(1)就不用开varchar(10)</description>
    </item>
    
    <item>
      <title>注册中心</title>
      <link>https://kevinerr.github.io/posts/tech/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</link>
      <pubDate>Tue, 12 Apr 2022 16:10:07 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</guid>
      <description>如何设计一个注册中心？ 如何设计一个RPC框架？</description>
    </item>
    
    <item>
      <title>RabbitMQ</title>
      <link>https://kevinerr.github.io/posts/tech/rabbitmq/</link>
      <pubDate>Mon, 11 Apr 2022 15:14:40 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/rabbitmq/</guid>
      <description>什么是中间件 中间件（Middleware）是处于操作系统和应用程序之间的软件 举例： 1，RMI（Remote Method Invocations, 远程调用） 2，Load Bala</description>
    </item>
    
    <item>
      <title>数据交换格式</title>
      <link>https://kevinerr.github.io/posts/tech/%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2%E6%A0%BC%E5%BC%8F/</link>
      <pubDate>Sun, 10 Apr 2022 19:51:02 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2%E6%A0%BC%E5%BC%8F/</guid>
      <description>序列化与反序列化 将不同语言的特有数据结构搞成大家都认的二进制串 将大家都认的二进制串子搞成不同语言的特有数据结构 如果在一大坨微服务构成的庞大业</description>
    </item>
    
    <item>
      <title>HTTP</title>
      <link>https://kevinerr.github.io/posts/tech/http/</link>
      <pubDate>Sun, 10 Apr 2022 14:24:33 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/http/</guid>
      <description>host字段的作用. 同一个IP可以设置多个不同站点， 如果访问不同的域名都转发到同一IP，怎么区分这些不同的站点呢 ， 就是用的Host字段 ，如果</description>
    </item>
    
    <item>
      <title>最短路</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E6%9C%80%E7%9F%AD%E8%B7%AF/</link>
      <pubDate>Sat, 09 Apr 2022 20:02:22 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E6%9C%80%E7%9F%AD%E8%B7%AF/</guid>
      <description>朴素dijkstra算法 Dijkstra 算法是一个基于「贪心」、「广度优先搜索」、「动态规划」求一个图中一个点到其他所有点的最短路径的算法，时间复杂度 O(n2) 每</description>
    </item>
    
    <item>
      <title>Go的封装、继承和多态</title>
      <link>https://kevinerr.github.io/posts/tech/go%E7%9A%84%E5%B0%81%E8%A3%85%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/</link>
      <pubDate>Sat, 09 Apr 2022 10:59:32 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/go%E7%9A%84%E5%B0%81%E8%A3%85%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/</guid>
      <description>封装 封装主要是通过访问权限控制实现的。 在Java中，共有public 、protected、default、private这四种权限控制。 而相</description>
    </item>
    
    <item>
      <title>BFS与DFS</title>
      <link>https://kevinerr.github.io/posts/algorithm/bfs%E4%B8%8Edfs/</link>
      <pubDate>Thu, 07 Apr 2022 22:20:18 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/bfs%E4%B8%8Edfs/</guid>
      <description>树与图的存储 树是一种特殊的图，与图的存储方式相同。 对于无向图中的边ab，存储两条有向边a-&amp;gt;b, b-&amp;gt;a。 因此我们可以只考虑有向</description>
    </item>
    
    <item>
      <title>并查集</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link>
      <pubDate>Wed, 06 Apr 2022 20:44:27 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid>
      <description>思想 并查集可以理解为一种解决问题的思想，将有关系的元素合并为一个集合。 模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description>
    </item>
    
    <item>
      <title>Trie</title>
      <link>https://kevinerr.github.io/posts/algorithm/trie/</link>
      <pubDate>Mon, 04 Apr 2022 21:59:38 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/trie/</guid>
      <description>模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 int son[N][26], cnt[N], idx; // 0号点既是根节点，又是空节点 // son[][]存储树中每个节点的子节</description>
    </item>
    
    <item>
      <title>Kmp</title>
      <link>https://kevinerr.github.io/posts/algorithm/kmp/</link>
      <pubDate>Mon, 04 Apr 2022 20:52:44 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/kmp/</guid>
      <description>模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // s[]是长文本，p[]是模式串，n是s的长度，m是p的长度 求模式串的Next数组： for (int i = 2, j</description>
    </item>
    
    <item>
      <title>2021寒假每日一题入门组</title>
      <link>https://kevinerr.github.io/posts/algorithm/2021%E5%AF%92%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E5%85%A5%E9%97%A8%E7%BB%84/</link>
      <pubDate>Sat, 02 Apr 2022 21:07:14 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/2021%E5%AF%92%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E5%85%A5%E9%97%A8%E7%BB%84/</guid>
      <description>十三号星期五 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include &amp;lt;bits/stdc++.h&amp;gt;using namespace std; int main() { int n; cin &amp;gt;&amp;gt; n; int a[7] = {0};//记录星期出现</description>
    </item>
    
    <item>
      <title>区间合并</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6/</link>
      <pubDate>Sat, 02 Apr 2022 12:44:28 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6/</guid>
      <description>https://www.acwing.com/problem/search/1/?csrfmiddlewaretoken=A6hJmK9QIKhI2BjKpv9ngRnfmmlSDTEY6DjbNvDxBtLwn1nSLHtW0NrLCd6KKoSn&amp;amp;search_content=%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6 思想 一、简述 区间合并 就是将坐标轴中两个存在交集 的区间合并 成一个 区间 。 二、 思想 1.将所有 区间 按左端点从小到大排序 2.从左到右遍历每个 区间 ，把</description>
    </item>
    
    <item>
      <title>离散化</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E7%A6%BB%E6%95%A3%E5%8C%96/</link>
      <pubDate>Sat, 02 Apr 2022 12:33:29 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E7%A6%BB%E6%95%A3%E5%8C%96/</guid>
      <description>离散化思想(好像都可以用map来解决捏) 数据离散化是一个非常重要的思想。 为什么要离散化?当以权值为下标的时候，有时候值太大，存不下。 所以把要</description>
    </item>
    
    <item>
      <title>基于gin的聊天系统</title>
      <link>https://kevinerr.github.io/posts/tech/%E5%9F%BA%E4%BA%8Egin%E7%9A%84%E8%81%8A%E5%A4%A9%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Mon, 28 Mar 2022 14:44:23 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E5%9F%BA%E4%BA%8Egin%E7%9A%84%E8%81%8A%E5%A4%A9%E7%B3%BB%E7%BB%9F/</guid>
      <description>这个项目是基于WebSocket + MongoDB + MySQL + Redis。业务逻辑很简单，只是两人的聊天。 WebSocket WebSocket是应用层第七层上的一个应用层协议，</description>
    </item>
    
    <item>
      <title>基于gin的备忘录开发</title>
      <link>https://kevinerr.github.io/posts/tech/%E5%9F%BA%E4%BA%8Egin%E7%9A%84%E5%A4%87%E5%BF%98%E5%BD%95%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 28 Mar 2022 11:17:57 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E5%9F%BA%E4%BA%8Egin%E7%9A%84%E5%A4%87%E5%BF%98%E5%BD%95%E5%BC%80%E5%8F%91/</guid>
      <description>此项目使用Gin+Gorm ，基于RESTful API实现的一个备忘录 https://blog.csdn.net/weixin_45304503/article/details/120680957 项目主要功能介绍 用户注册登录 ( jwt-go鉴权 ) 新增 / 删除 / 修改 / 查询</description>
    </item>
    
    <item>
      <title>前缀和与差分</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86/</link>
      <pubDate>Sun, 27 Mar 2022 22:07:44 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86/</guid>
      <description>前缀和是一种极其优秀的线性结构，也是一种重要的思想，能极大地降低区间查询的时间复杂度。 一维前缀和 1 2 S[i] = a[1] + a[2] + ... a[i] a[l] + ... + a[r] = S[r] - S[l - 1] 最</description>
    </item>
    
    <item>
      <title>高精度</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E9%AB%98%E7%B2%BE%E5%BA%A6/</link>
      <pubDate>Sat, 26 Mar 2022 22:38:27 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E9%AB%98%E7%B2%BE%E5%BA%A6/</guid>
      <description>高精度加法 模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // C = A + B, A &amp;gt;= 0, B &amp;gt;= 0 vector&amp;lt;int&amp;gt; add(vector&amp;lt;int&amp;gt; &amp;amp;A, vector&amp;lt;int&amp;gt; &amp;amp;B) { if (A.size() &amp;lt; B.size()) return add(B, A); vector&amp;lt;int&amp;gt; C; int t = 0; for (int i = 0; i &amp;lt; A.size(); i ++ ) { t +=</description>
    </item>
    
    <item>
      <title>二分</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E4%BA%8C%E5%88%86/</link>
      <pubDate>Thu, 24 Mar 2022 20:18:43 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E4%BA%8C%E5%88%86/</guid>
      <description>整数二分 思想 模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 bool check(int x) {/* ... */} // 检查x是否满足某种性质 // 区间[l, r]被划分成[l, mid]和</description>
    </item>
    
    <item>
      <title>2021每日一题暑假</title>
      <link>https://kevinerr.github.io/posts/algorithm/2021%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E6%9A%91%E5%81%87/</link>
      <pubDate>Wed, 23 Mar 2022 21:50:21 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/2021%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%E6%9A%91%E5%81%87/</guid>
      <description>[]: https://www.acwing.com/problem/content/description/3765/ 二进制矩阵 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 #include &amp;lt;iostream&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;algorithm&amp;gt; using namespace std; const</description>
    </item>
    
    <item>
      <title>排序</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Wed, 23 Mar 2022 20:32:32 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E6%8E%92%E5%BA%8F/</guid>
      <description>排序的问题基本都是让我们利用各种排序的思想去解决其他问题的 快排 思想 快速排序所采用的思想是分治的思想。所谓分治，就是指以一个数为基准，将序列中</description>
    </item>
    
    <item>
      <title>排列组合</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/</link>
      <pubDate>Sat, 19 Mar 2022 22:20:31 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/</guid>
      <description>排列组合 回溯算法是什么？解决回溯算法相关的问题有什么技巧？如何学习回溯算法？回溯算法代码是否有规律可循？ 其实回溯算法其实就是我们常说的 DFS 算法</description>
    </item>
    
    <item>
      <title>滑动窗口</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</link>
      <pubDate>Sat, 19 Mar 2022 22:20:31 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</guid>
      <description>滑动窗口法 什么情况下会想到滑动窗口法： 任何题目如果没有思路其实都可以想一下暴力解法。这道题暴力解法思路简单： 遍历任意i，j，使得i和j之间的</description>
    </item>
    
    <item>
      <title>Zinx Learn</title>
      <link>https://kevinerr.github.io/posts/tech/zinx-learn/</link>
      <pubDate>Thu, 17 Mar 2022 12:04:29 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/zinx-learn/</guid>
      <description>代码 本人代码仓库 官方代码仓库 官方教程 官方文档 引言 Golang目前在服务器的应用框架很多，但是应用在游戏领域或者其他长链接的领域的轻量级企业框</description>
    </item>
    
    <item>
      <title>Leetcode_hot100</title>
      <link>https://kevinerr.github.io/posts/algorithm/leetcode_hot100/</link>
      <pubDate>Tue, 15 Mar 2022 16:51:32 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/leetcode_hot100/</guid>
      <description>简单模块 1、两数之和 简单题，用unordered_map&amp;lt;int,int&amp;gt; um;key为值，value为数组下标 遍历一遍，看um</description>
    </item>
    
    <item>
      <title>Stl</title>
      <link>https://kevinerr.github.io/posts/algorithm/stl/</link>
      <pubDate>Tue, 15 Mar 2022 16:40:10 +0800</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/stl/</guid>
      <description>vector 初始化 1 2 3 4 vector&amp;lt;int&amp;gt; a(10); //没有给出初值，其值是不确定的 vector&amp;lt;int&amp;gt; a(10,1); //定义了10个整型元素的向量,且给出每个元素的初值为1 vector&amp;lt;int&amp;gt; a(b); //用b向量来创建a向量</description>
    </item>
    
    <item>
      <title>nginx</title>
      <link>https://kevinerr.github.io/posts/tech/nginx/</link>
      <pubDate>Mon, 07 Mar 2022 09:15:30 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/nginx/</guid>
      <description>简介 Nginx 是高性能的 HTTP 和反向代理的服务器，处理高并发能力是十分强大的，能经受高负载的考验,有报告表明能支持高达 50,000 个并发连接数。 三大功能 反向代理 负</description>
    </item>
    
    <item>
      <title>go教程</title>
      <link>https://kevinerr.github.io/posts/tech/go%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 14 Feb 2022 20:51:37 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/go%E6%95%99%E7%A8%8B/</guid>
      <description>y以下是我的go学习之路，仅供参考 https://juejin.cn/post/7038967716459315208 go入门 go语法基础 go菜鸟 https://studygolang.com/articles/35591 go底层 Golang深入理解GPM模型 Golang中GC回收机制三色标记与</description>
    </item>
    
    <item>
      <title>docker</title>
      <link>https://kevinerr.github.io/posts/tech/docker/</link>
      <pubDate>Wed, 09 Feb 2022 18:55:50 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/docker/</guid>
      <description>docker官方文档 https://zhuanlan.zhihu.com/p/187505981 docker安装 卸载旧版本 1 2 3 4 5 6 7 8 sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine 2.安装yum-utils 1 sudo yum install -y yum-utils 3</description>
    </item>
    
    <item>
      <title>springmvc</title>
      <link>https://kevinerr.github.io/posts/tech/springmvc/</link>
      <pubDate>Sun, 30 Jan 2022 21:12:40 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/springmvc/</guid>
      <description>SpringMVC SpringMVC核心组件 SpringMVC工作流程 开发流程 视图解析器前缀后缀写反了 RequestMapping Cookie</description>
    </item>
    
    <item>
      <title>javaweb</title>
      <link>https://kevinerr.github.io/posts/tech/javaweb/</link>
      <pubDate>Thu, 20 Jan 2022 21:01:10 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/javaweb/</guid>
      <description>Servlet Tomcat 定义 servlet的生命周期 ServletConfig/ServletContext servlet的层次结构 JSP 定义 JSP嵌入java的三种方式 JSP9个内置对象 request常用方法 重定向和</description>
    </item>
    
    <item>
      <title>java笔试</title>
      <link>https://kevinerr.github.io/posts/tech/java%E7%AC%94%E8%AF%95/</link>
      <pubDate>Fri, 19 Nov 2021 13:33:28 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/java%E7%AC%94%E8%AF%95/</guid>
      <description>自增变量 单例模式 类初始化和实例初始化（子类的重写 方法参数的传递机制 递归与循环迭代 成员变量/局部变量 Spring Bean的作用域 Spring支持的常用数</description>
    </item>
    
    <item>
      <title>mybatis</title>
      <link>https://kevinerr.github.io/posts/tech/mybatis/</link>
      <pubDate>Thu, 24 Jun 2021 22:40:31 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/mybatis/</guid>
      <description>MyBatis的工作原理 Mybatis 缓存</description>
    </item>
    
    <item>
      <title>ElasticSearch</title>
      <link>https://kevinerr.github.io/posts/tech/elasticsearch/</link>
      <pubDate>Sat, 12 Jun 2021 13:05:23 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/elasticsearch/</guid>
      <description>ElasticSearch Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎 安装环境 1 2 3 4 ElasticSearch: https://mirrors.huaweicloud.com/elasticsearch/?C=N&amp;amp;O=D logstash: https://mirrors.huaweicloud.com/logstash/?C=N&amp;amp;O=D kibana: https://mirrors.huaweicloud.com/kibana/?C=N&amp;amp;O=D ik分词器：https://github.com/med</description>
    </item>
    
    <item>
      <title>非常有用的小tips</title>
      <link>https://kevinerr.github.io/posts/life/%E9%9D%9E%E5%B8%B8%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8Ftips/</link>
      <pubDate>Fri, 28 May 2021 22:38:52 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/life/%E9%9D%9E%E5%B8%B8%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8Ftips/</guid>
      <description>正版office 官网 使用方法 激活windows 以管理员身份运行cmd slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX slmgr /skms kms.03k.org slmgr /ato 重装系统 下载window10镜像 安装pe系统 进入BIOS</description>
    </item>
    
    <item>
      <title>ps</title>
      <link>https://kevinerr.github.io/posts/life/ps/</link>
      <pubDate>Mon, 24 May 2021 23:03:43 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/life/ps/</guid>
      <description>工具面板 文字T键入——放大镜（Alt切换）——抓手（移动画布）；Ctrl+0以最大呈现 新建工作区：导航器，画笔，字符 图层面板 混合模式：滤色（</description>
    </item>
    
    <item>
      <title>acwing</title>
      <link>https://kevinerr.github.io/posts/algorithm/acwing/</link>
      <pubDate>Fri, 16 Apr 2021 18:55:50 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/acwing/</guid>
      <description>找出数组中重复的元素 n个数（每个数的取值范围是1到n-1） https://www.acwing.com/solution/content/707/ 把每个数放到它原本的位置上去O(n),O(1),数组发生了改变 https://www.acwing.com/solution/content/693/ 抽屉原理二分法，</description>
    </item>
    
    <item>
      <title>springcloud</title>
      <link>https://kevinerr.github.io/posts/tech/springcloud/</link>
      <pubDate>Fri, 09 Apr 2021 23:41:21 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/springcloud/</guid>
      <description>Eureka Spring Cloud Eureka是Spring Cloud Netflix 子项目的核心组件之一，主要用于微服务架构中的服务治理。本文将对搭建Eureka注册中心，搭建Eureka</description>
    </item>
    
    <item>
      <title>摄影</title>
      <link>https://kevinerr.github.io/posts/life/%E6%91%84%E5%BD%B1/</link>
      <pubDate>Wed, 07 Apr 2021 23:13:43 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/life/%E6%91%84%E5%BD%B1/</guid>
      <description>快门速度、iso以及光圈数值 快门速度：相机左下角的参数就是快门速度，指快门打开到闭合所需要的时间。快门速度越快，你定格的时间越短，比如：快门</description>
    </item>
    
    <item>
      <title>数据库</title>
      <link>https://kevinerr.github.io/posts/tech/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Mon, 22 Mar 2021 12:55:01 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>MySQL结构体系 https://cloud.tencent.com/developer/article/1857505 数据库引擎 MyISAM：表锁，并发量较小，不支持事务，不支持外键（性能更优，占用的存储空间少，MYISAM拥有全文索引的</description>
    </item>
    
    <item>
      <title>操作系统</title>
      <link>https://kevinerr.github.io/posts/tech/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 21 Mar 2021 23:55:27 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
      <description>https://blog.csdn.net/weixin_43914604/article/details/104415990 第 1 章 计算机系统概述 1.1 操作系统的基本概念 1.1.1 操作系统的概念、功能和目标（系统资源的管理者、提供接口、作为扩充机器、虚拟机） https://blog.csdn.net/weixin_43914604/article/details/104408571 1.1.2 操作系统的特征</description>
    </item>
    
    <item>
      <title>网络应用</title>
      <link>https://kevinerr.github.io/posts/tech/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sun, 21 Mar 2021 20:05:10 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8/</guid>
      <description>网络的功能 计算机网络的功能主要体现在资源共享、数据通信和分布式处理三个方面。资源共享是计算机网络用户提供的最主要的功能，资源是指在有限时间内</description>
    </item>
    
    <item>
      <title>linux</title>
      <link>https://kevinerr.github.io/posts/tech/linux/</link>
      <pubDate>Thu, 18 Mar 2021 22:01:23 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/linux/</guid>
      <description>Linux常用命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 打包并压缩文件:“tar -czvf 压缩包名.tar.gz 文件名” 解压并展开压缩包:“tar -xzvf</description>
    </item>
    
    <item>
      <title>设计模式</title>
      <link>https://kevinerr.github.io/posts/tech/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 18 Mar 2021 21:52:15 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>好东西 设计模式的原则 1、开闭原则（Open Close Principle） 开闭原则的意思是：对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修</description>
    </item>
    
    <item>
      <title>并发/多线程</title>
      <link>https://kevinerr.github.io/posts/tech/%E5%B9%B6%E5%8F%91-%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Thu, 18 Mar 2021 21:46:48 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/%E5%B9%B6%E5%8F%91-%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
      <description>并发编程基础 线程会带来额外的开销，如cpu调度 继承thread类，重写run()方法，调用start()开启线程 run() 只有主线程一条执行路径；s</description>
    </item>
    
    <item>
      <title>Java基础</title>
      <link>https://kevinerr.github.io/posts/tech/java%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 18 Mar 2021 17:00:07 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/java%E5%9F%BA%E7%A1%80/</guid>
      <description>基础语法 对象：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。 类：类是一个</description>
    </item>
    
    <item>
      <title>spring</title>
      <link>https://kevinerr.github.io/posts/tech/spring/</link>
      <pubDate>Wed, 17 Mar 2021 19:22:02 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/spring/</guid>
      <description>SSH Struts+Spring+Hibernate SSM SpringMVC+Spring+Mybatis ORM ORM就是对象关系匹配，是为了解决面向对象与关系数据库存在的互不匹配的问题。简单来说，就是把关系数据库中的数据转换成面向对象程序中</description>
    </item>
    
    <item>
      <title>redis学习笔记</title>
      <link>https://kevinerr.github.io/posts/tech/redis/</link>
      <pubDate>Tue, 16 Mar 2021 14:47:25 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/redis/</guid>
      <description>Redis常见面试题 Redis(remote dictionary server) 远程字典服务 1、 db，每次都从数据库中查 2、 用一个List存储查的全部结果，然后再在List中过滤 3、 本地缓存，同</description>
    </item>
    
    <item>
      <title>jvm</title>
      <link>https://kevinerr.github.io/posts/tech/jvm/</link>
      <pubDate>Mon, 15 Mar 2021 19:13:13 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/jvm/</guid>
      <description>面试问题 谈谈对JVM的理解？java8虚拟机和以前有什么区别 什么是OOM？什么是栈溢出StackOverFlowError？ JVM的常用调优</description>
    </item>
    
    <item>
      <title></title>
      <link>https://kevinerr.github.io/posts/tech/latex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/tech/latex/</guid>
      <description>1 2 3 4 5 6 7 pdflatex test.tex #不允许有中文 xelatex test.tex #通用 texdoc #打开文档 texdoc ctex texdoc lshort-zh-ch texdoc symbols-a4 texdoc beame</description>
    </item>
    
    
    <item>
      <title>单调队列和单调栈</title>
      <link>https://kevinerr.github.io/posts/algorithm/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E5%92%8C%E5%8D%95%E8%B0%83%E6%A0%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/posts/algorithm/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E5%92%8C%E5%8D%95%E8%B0%83%E6%A0%88/</guid>
      <description>单调队列 常见模型：找出滑动窗口中的最大值/最小值 是一种主要用于解决滑动窗口类问题的数据结构，即在长度为n 的序列中，求每个长度为 k的区间的区间</description>
    </item>
    
    
    <item>
      <title>🔍搜索</title>
      <link>https://kevinerr.github.io/tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/tags/</guid>
      <description></description>
    </item>
    
    <item>
      <title>🙋🏻‍♂️关于</title>
      <link>https://kevinerr.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/about/</guid>
      <description>Talk is cheap,show me the code 职业：五线城市程序员 运动：篮球、羽毛球、乒乓球、游泳、跑步 游戏：LOL</description>
    </item>
    
    <item>
      <title>🤝友情链接</title>
      <link>https://kevinerr.github.io/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kevinerr.github.io/links/</guid>
      <description>Sulv’s Blog 一个记录技术、阅读、生活的博客 👉友链格式 名称： hkh&amp;rsquo;s blog 网址： 图标： 描述： 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广</description>
    </item>
    
  </channel>
</rss>
